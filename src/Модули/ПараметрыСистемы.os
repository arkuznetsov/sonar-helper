///////////////////////////////////////////////////////////////////
//
// Служебный модуль с набором служебных параметров приложения
//
// Структура модуля реализована в соответствии с рекомендациями
// oscript-app-template (C) EvilBeaver
//
///////////////////////////////////////////////////////////////////

Перем ВозможныеКомандыПриложения;

//	Возвращает идентификатор лога приложения
//
// Возвращаемое значение:
//   Строка   - Значение идентификатора лога приложения
//
Функция ИмяЛогаСистемы() Экспорт

	Возврат "oscript.app." + ИмяПродукта();

КонецФункции // ИмяЛогаСистемы

//	Возвращает текущую версию продукта
//
// Возвращаемое значение:
//   Строка   - Значение текущей версии продукта
//
Функция ВерсияПродукта() Экспорт

	Версия = "1.3.1";
	Возврат Версия;

КонецФункции // ВерсияПродукта()

// Возвращает имя продукта
//
//  Возвращаемое значение:
//   Строка - имя продукта
//
Функция ИмяПродукта() Экспорт
	Возврат "sonar-helper";
КонецФункции

Функция ВозможныеКоманды() Экспорт

	Если ВозможныеКомандыПриложения = Неопределено Тогда

		ВозможныеКомандыПриложения = Новый Структура;
		ВозможныеКомандыПриложения.Вставить("Помощь", "help");
		ВозможныеКомандыПриложения.Вставить("ПоказатьВерсию", "version");
		ВозможныеКомандыПриложения.Вставить("ЗакрытьИшузы", "issue-resolver");
		ВозможныеКомандыПриложения.Вставить("СгенерироватьОтчет", "report");
		ВозможныеКомандыПриложения.Вставить("СгенерироватьОтчетПоПользователям", "usr-report");
		ВозможныеКомандыПриложения.Вставить("ПеренестиИшузы", "transfer-issues");

		ВозможныеКомандыПриложения = Новый ФиксированнаяСтруктура(ВозможныеКомандыПриложения);

	КонецЕсли;

	Возврат ВозможныеКомандыПриложения;

КонецФункции

Процедура ПриРегистрацииКомандПриложения(Знач КлассыРеализацииКоманд) Экспорт

	КлассыРеализацииКоманд[ВозможныеКоманды().Помощь]								= "КомандаСправкаПоПараметрам";
	КлассыРеализацииКоманд[ИмяКомандыВерсия()]										= "КомандаVersion";
	КлассыРеализацииКоманд[ВозможныеКоманды().ЗакрытьИшузы]							= "КомандаЗакрытьИшузы";
	КлассыРеализацииКоманд[ВозможныеКоманды().СгенерироватьОтчет]					= "КомандаСгенерироватьОтчет";
	КлассыРеализацииКоманд[ВозможныеКоманды().СгенерироватьОтчетПоПользователям]	= "КомандаСгенерироватьОтчетПоПользователям";
	КлассыРеализацииКоманд[ВозможныеКоманды().ПеренестиИшузы] 						= "КомандаПеренестиИшузы";

КонецПроцедуры // ПриРегистрацииКомандПриложения

// Одна из команд может вызываться неявно, без указания команды.
// Иными словами, здесь указывается какой обработчик надо вызывать, если приложение запущено без какой-либо команды
//  myapp /home/user/somefile.txt будет аналогично myapp default-action /home/user/somefile.txt
Функция ИмяКомандыПоУмолчанию() Экспорт
	Возврат ВозможныеКоманды().Помощь;
КонецФункции

// Возвращает имя команды версия (ключ командной строки)
//
//  Возвращаемое значение:
//   Строка - имя команды
//
Функция ИмяКомандыВерсия() Экспорт
	Возврат ВозможныеКоманды().ПоказатьВерсию;
КонецФункции
